#include <WiFi.h>
#include <WiFiUdp.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// --- Wi-Fi Credentials (Replace with your network details) ---
const char* ssid = "";
const char* password = "";

// --- Display & Network Definitions ---
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// --- UDP Setup ---
WiFiUDP udp;
const int UDP_PORT = 8888; // Port to listen on

void setup() {
  Serial.begin(115200);

  // Initialize OLED display
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);
  display.println("Connecting to WiFi...");
  display.display();

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  // Start UDP listener
  udp.begin(UDP_PORT);
  Serial.printf("UDP listener started on port %d\n", UDP_PORT);

  // Display IP on OLED
  display.clearDisplay();
  display.println("Ready to receive.");
  display.println("IP:");
  display.println(WiFi.localIP());
  display.display();
}

void loop() {
  // Check if a UDP packet has arrived
  int packetSize = udp.parsePacket();

  if (packetSize) {
    // We expect exactly 1024 bytes (128*64/8)
    if (packetSize == 1024) {
      // Read the packet data directly into the display's internal buffer
      udp.read(display.getBuffer(), 1024);
      
      // Push the buffer to the physical screen
      display.display();
    } else {
      // If packet is wrong size, flush it to avoid issues
      udp.flush(); 
    }
  }
}
